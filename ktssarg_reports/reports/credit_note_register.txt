select coalesce(aa.id,'0') as id, 
coalesce(aa.journal_name,'') as journal_name, 
coalesce(aa.currency,'') as currency, 
coalesce(aa.partner,'') as partner, 
coalesce(az.payment_term,'') as payment_term, 
coalesce(aa.amount_untaxed,'0') amount_untaxed, 
coalesce(aa.amount_total,'0') amount_total, 
coalesce(aa.freight_charges,'0') freight_charges, 
coalesce(aa.packing_charges,'0') packing_charges,
case when coalesce(aa.invoice_no_by_user,'0')=0 then COALESCE(aa.number,'') else  COALESCE(aa.number,'') end as invoice_no_by_user, 
coalesce(aa.date_invoice,'1900-01-01') date_invoice,
coalesce(aa.fiscal_position,'') as fiscal_position, 
case when ab.tax_detail is null then aa.fiscal_position else ab.tax_detail end as tax_detail,
coalesce(ac.ecess_on_cenvat_tax_amount,'0') as ecess_on_cenvat_tax_amount, 
coalesce(ac.ecess_on_cenvat_base_amount,'0') as ecess_on_cenvat_base_amount,
coalesce(ac.hcess_on_cenvat_tax_amount,'0') as hcess_on_cenvat_tax_amount,
coalesce(ac.hcess_on_cenvat_base_amount,'0') as hcess_on_cenvat_base_amount,
coalesce(ac.cenvat_tax_amount,'0') as cenvat_tax_amount,
coalesce(ac.cenvat_base_amount,'0') as cenvat_base_amount,
coalesce(ac.cst_tax_amount,'0') as cst_tax_amount,
coalesce(ac.cst_base_amount,'0') as cst_base_amount,
coalesce(ac.mvat_tax_amount,'0') as mvat_tax_amount,
coalesce(ac.mvat_base_amount,'0') as mvat_base_amount,
coalesce(ac.ecess_on_service_tax_tax_amount,'0') as ecess_on_service_tax_tax_amount,
coalesce(ac.ecess_on_service_tax_base_amount,'0') as ecess_on_service_tax_base_amount,
coalesce(ac.hcess_on_service_tax_tax_amount,'0') as hcess_on_service_tax_tax_amount,
coalesce(ac.hcess_on_service_tax_base_amount,'0') as hcess_on_service_tax_base_amount,
coalesce(ac.service_tax_tax_amount,'0') as service_tax_tax_amount,
coalesce(ac.service_tax_base_amount,'0') as service_tax_base_amount,
coalesce(ad.frg_qty,'0') as frg_qty,
coalesce(ad.srg_qty,'0') as srg_qty,
coalesce(ad.spg_qty,'0') as spg_qty,
coalesce(ad.ppg_qty,'0') as ppg_qty,
coalesce(ad.other_qty,'0') as other_qty,
coalesce(ae.amount_currency,'0') as amount_currency,
coalesce(ae.total_amount,'0') as total_amount,
COALESCE(case when coalesce(ae.amount_currency,'0')=0 then 0 else ae.total_amount/ae.amount_currency end,'0') as exchange_rate,
COALESCE(case when coalesce(ae.amount_currency,'0')=0 then 0 else ae.total_amount end,'0') as total_amount_inr,
COALESCE(case when coalesce(ae.amount_currency,'0')=0 then 0 else ah.total_amount end,'0') as amount_untaxed_inr,
COALESCE(case when coalesce(ae.amount_currency,'0')=0 then 0 else coalesce(af.packing_charges,'0') end,'0') as packing_charges_inr,
COALESCE(case when coalesce(ae.amount_currency,'0')=0 then 0 else coalesce(ag.freight_charges,'0') end,'0') as freight_charges_inr,
COALESCE(aj.bill_no,'') as bill_no,
COALESCE(aj.bill_date,'') as bill_date
from
(select a.id, a.journal_id,b.name as journal_name, a.currency_id, a.payment_term,
e.name as currency, a.partner_id, c.name as partner, a.amount_untaxed, a.total_amount as amount_total, case when a.freight_charges_type ='variable' then a.freight_charges* a.amount_untaxed/100 else a.freight_charges end as freight_charges, case when a.packing_charges_type ='variable' then a.packing_charges* a.amount_untaxed/100 else a.packing_charges end as packing_charges, a.invoice_no_by_user, a.date_invoice, f.name as fiscal_position, a.move_id, a.account_id, a.number, a.move_id
from account_invoice a, res_currency e, res_partner c, account_journal b, account_fiscal_position f
where a.type='out_refund' and a.state in ('paid','open')
and
a.currency_id=e.id
and
a.journal_id=b.id
and
a.partner_id=c.id
and
a.fiscal_position = f.id) as aa


left outer join
(select id, name as payment_term from account_payment_term ) as az
on
aa.payment_term=az.id
inner join
(select a.id,a.account_id,sum(b.amount_currency) as amount_currency, sum(debit) as total_amount from account_invoice a, account_move_line b where a.move_id=b.move_id and a.account_id=b.account_id
group by a.id,a.account_id
) as ae
on aa.id=ae.id and aa.account_id=ae.account_id
left outer join
(select a.id,a.packing_account, sum(credit-debit) as packing_charges from account_invoice a, account_move_line b where a.move_id=b.move_id and a.packing_account=b.account_id
group by a.id,a.account_id
) as af
on aa.id=af.id
left outer join
(select a.id,coalesce(sum(credit-debit),'0') as total_amount from account_invoice a, account_move_line b where a.move_id=b.move_id and b.account_id in (select distinct d.account_id from account_invoice_line d, account_invoice e where e.type='out_invoice' and e.id=d.invoice_id)
group by a.id
) as ah
on aa.id=ah.id
left outer join
(select a.id,a.freight_account, sum(credit-debit) as freight_charges from account_invoice a, account_move_line b where a.move_id=b.move_id and a.freight_account=b.account_id
group by a.id,a.account_id
) as ag
on aa.id=ag.id
left outer join
(select e.invoice_id, array_to_string(array_agg(e.name),',') as tax_detail
from 
(select distinct a.id as invoice_id,d.name as name, d.tax_category as tax_category from account_invoice a, account_invoice_line b, account_invoice_line_tax c, account_tax d
where 
a.id=b.invoice_id
and 
b.id=c.invoice_line_id
and
c.tax_id=d.id) as e group by e.invoice_id ) as ab
on 
aa.id=ab.invoice_id


left outer join
(select b.invoice_id, 
sum(b.ecess_on_cenvat_tax_amount) as ecess_on_cenvat_tax_amount, sum(b.ecess_on_cenvat_base_amount) as ecess_on_cenvat_base_amount,
sum(b.hcess_on_cenvat_tax_amount) as hcess_on_cenvat_tax_amount,sum(b.hcess_on_cenvat_base_amount) as hcess_on_cenvat_base_amount,
sum(b.cenvat_tax_amount) as cenvat_tax_amount,sum(b.cenvat_base_amount) as cenvat_base_amount,
sum(b.cst_tax_amount) as cst_tax_amount,sum(b.cst_base_amount) as cst_base_amount,
sum(b.mvat_tax_amount) as mvat_tax_amount,sum(b.mvat_base_amount) as mvat_base_amount,
sum(b.ecess_on_service_tax_tax_amount) as ecess_on_service_tax_tax_amount,sum(b.ecess_on_service_tax_base_amount) as ecess_on_service_tax_base_amount,
sum(b.hcess_on_service_tax_tax_amount) as hcess_on_service_tax_tax_amount,sum(b.hcess_on_service_tax_base_amount) as hcess_on_service_tax_base_amount,
sum(b.service_tax_tax_amount) as service_tax_tax_amount,sum(b.service_tax_base_amount) as service_tax_base_amount
from 
(select a.invoice_id, 
case when a.tax_category='ecess_on_cenvat' then a.tax_amount else '0' end as ecess_on_cenvat_tax_amount, 
case when a.tax_category='hcess_on_service_tax' then a.tax_amount else '0' end as hcess_on_service_tax_tax_amount,
case when a.tax_category='service_tax' then a.tax_amount else '0' end as service_tax_tax_amount,
case when a.tax_category='ecess_on_service_tax' then a.tax_amount else '0' end as ecess_on_service_tax_tax_amount,
case when a.tax_category='cst' then a.tax_amount else '0' end as cst_tax_amount,
case when a.tax_category='cenvat' then a.tax_amount else '0' end as cenvat_tax_amount,
case when a.tax_category='hcess_on_cenvat' then a.tax_amount else '0' end as hcess_on_cenvat_tax_amount,
case when a.tax_category='mvat' then a.tax_amount else '0' end as mvat_tax_amount,

case when a.tax_category='ecess_on_cenvat' then a.base_amount else '0' end as ecess_on_cenvat_base_amount, 
case when a.tax_category='hcess_on_service_tax' then a.base_amount else '0' end as hcess_on_service_tax_base_amount,
case when a.tax_category='service_tax' then a.base_amount else '0' end as service_tax_base_amount,
case when a.tax_category='ecess_on_service_tax' then a.base_amount else '0' end as ecess_on_service_tax_base_amount,
case when a.tax_category='cst' then a.base_amount else '0' end as cst_base_amount,
case when a.tax_category='cenvat' then a.base_amount else '0' end as cenvat_base_amount,
case when a.tax_category='hcess_on_cenvat' then a.base_amount else '0' end as hcess_on_cenvat_base_amount,
case when a.tax_category='mvat' then a.base_amount else '0' end as mvat_base_amount
from account_invoice_tax a ) as b 
group by b.invoice_id ) as ac
on aa.id=ac.invoice_id


left outer join
(select d.invoice_id,sum(d.frg_qty) as frg_qty,
sum(d.srg_qty) as srg_qty,
sum(d.spg_qty) as spg_qty,
sum(d.ppg_qty) as ppg_qty,
sum(d.other_qty) as other_qty
from
(
select a.id, b.id as product_id,a.invoice_id, 
case when c.sales_type='frg' then quantity else '0' end as frg_qty,
case when c.sales_type='srg' then quantity else '0' end as srg_qty,
case when c.sales_type='spg' then quantity else '0' end as spg_qty,
case when c.sales_type='ppg' then quantity else '0' end as ppg_qty,
case when c.sales_type='other' then quantity when c.sales_type is null then quantity else '0' end as other_qty
from account_invoice_line a, product_template b, product_category c where a.product_id=b.id and b.product_category_id =c.id and b.domain in ('service_product', 'other_product','product') 
union
select a.id, f.id as product_id, a.invoice_id, 
case when c.sales_type='frg' then quantity else '0' end as frg_qty,
case when c.sales_type='srg' then quantity else '0' end as srg_qty,
case when c.sales_type='spg' then quantity else '0' end as spg_qty,
case when c.sales_type='ppg' then quantity else '0' end as ppg_qty,
case when c.sales_type='other' then quantity when c.sales_type is null then quantity else '0' end as other_qty
from account_invoice_line a, product_template b, mrp_bom d, mrp_bom e, product_category c, product_template f
where 
a.product_id=b.id and
b.id=d.product_id and
d.bom_id is null and
d.id=e.bom_id and
e.product_id=f.id and
f.product_category_id =c.id and b.domain in ('assembly')

) as d group by d.invoice_id ) as ad
on
aa.id=ad.invoice_id

left outer join
(
select a1.id, COALESCE(a2.bill_no,'')||COALESCE(a3.bill_no,'') as bill_no, COALESCE(a2.bill_date,'')||COALESCE(a3.bill_date,'') as bill_date from
(select a.id, a.move_id, a.account_id, b.reconcile_id, b.reconcile_partial_id from account_invoice a, (select account_id, max(reconcile_id) as reconcile_id, max(reconcile_partial_id) as reconcile_partial_id, move_id from account_move_line group by account_id, move_id) b
where a.move_id=b.move_id and a.account_id=b.account_id and a.type='out_refund' and a.state in ('paid','open')) a1
left outer join
(select array_to_string(array_agg(a.name),',') as bill_no, array_to_string(array_agg(a.date),',') as bill_date, b.reconcile_id from account_move a, account_move_line b, account_journal c where a.id=b.move_id and b.reconcile_id is not null and a.journal_id=c.id and c.type ='sale' group by b.reconcile_id) a2
on a1.reconcile_id=a2.reconcile_id

left outer join
(select array_to_string(array_agg(a.name),',') as bill_no, array_to_string(array_agg(a.date),',') as bill_date, b.reconcile_partial_id from account_move a, account_move_line b, account_journal c where a.id=b.move_id and b.reconcile_partial_id is not null and a.journal_id=c.id and c.type ='sale' group by b.reconcile_Partial_id) a3
on a1.reconcile_partial_id=a3.reconcile_Partial_id ) aj
on aa.id = aj.id

where aa.date_invoice between %s and %s
order by aa.journal_id, aa.date_invoice, aa.invoice_no_by_user
