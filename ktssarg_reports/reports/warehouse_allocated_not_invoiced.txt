select  
COALESCE(partner_name,'') as partner_name,
COALESCE(partner_id,'0') as partner_id, 
COALESCE(OA_ref||', Picking Policy -'||aaaa.picking_policy,'') || case when COALESCE(aaaa.payment_term,'-NA')='-NA' then '' else ', Payment Term-'|| aaaa.payment_term end as OA_ref,
COALESCE(aaaa.sale_id,'0') as sale_id,
COALESCE(aaaa.customer_po_no) as customer_po_no,
COALESCE(date_confirm,'2000-01-01') as date_confirm, 
COALESCE(order_acceptance_ref,'') as order_acceptance_ref, 
COALESCE(prod_name,'') as prod_name, 
COALESCE(aaaa.product_id,'0') as product_id,   
COALESCE(delay,'0') as delay, COALESCE(prod_uom,'') as prod_uom, 
COALESCE(picking_uom,'') as picking_uom, 
COALESCE(total_prod_qty,'0') as total_prod_qty,
COALESCE(product_picking_qty,'0') as product_picking_qty, 
COALESCE(domain,'') as domain, 
COALESCE(product_category_id,'0') as product_category_id, 
COALESCE(sales_type,'') as sales_type, 
COALESCE(product_group_id,'0') as product_group_id,
COALESCE(bbbc.stock_location,'') as product_free_loc,
COALESCE(bbbc.Prod_free_loc,'') as product_free_qty,
COALESCE(bbbd.stock_location,'')  as product_sale_assigned_loc,
COALESCE(bbbd.sale_assigned_loc,'') as product_sale_assigned_qty,
COALESCE(bbbe.stock_location,'') as product_sale_net_loc,
COALESCE(bbbe.sale_unassigned_loc,'') as product_sale_net_qty,
COALESCE(bbbf.allocated_qty,'0') as allocated_qty,
case when COALESCE(aaaa.lot_id,'NA')='NA' then '' else ' -Lot No: '||aaaa.lot_id end as lot_id,
COALESCE(aaaa.sequence,'0') as sequence,
COALESCE(aaaa.service,'f') as service,
COALESCE(aaaa.proforma_invoice_no,'') as proforma_invoice_no,
COALESCE(delivery_order_no,'') as delivery_order_no,
COALESCE(trade_type,'domestic') as trade_type,
COALESCE(payment_term_type,'proforma_not_applicable') as payment_term_type


from 
(select  aaa.prod_name,aaa.OA_ref, aaa.partner_name,  aaa.prod_uom, aaa.total_prod_qty,
bbb.product_picking_qty, bbb.picking_uom, bbb.picking_status, bbb.picking_invoice_status,
aaa.domain, aaa.product_category_id, aaa.sales_type, aaa.product_group_id, aaa.pitch, aaa."TPI",   aaa.dia_mm, aaa.product_dia_convert_id, aaa.nominal_dia,  aaa.thread_direction, aaa.product_tolerance_id, aaa.srg, aaa.gage_type, ccc.product_group, ccc.pitch_format, ddd.product_tolerance, aaa.date_confirm , aaa.delay, aaa.order_acceptance_ref,ccc.dia_format, aaa.order_acceptance_ref_no_by_user, aaa.partner_id, aaa.product_id, aaa.customer_po_no, aaa.sale_id, aaa.picking_policy, replace(bbb.lot_id,'-NA','') as lot_id, fff.payment_term, aaa.sequence, COALESCE(aaa.service,'f') as service, aaa.proforma_invoice_no, bbb.delivery_order_no, COALESCE(ggg.trade_type,'domestic') as trade_type, case when COALESCE(fff.payment_term,'NA')='Proforma Invoice'  then case when COALESCE(aaa.proforma_invoice_no,'NA') ='NA' then 'proforma_not_done' else 'proforma_done'  end else 'proforma_not_applicable' end as payment_term_type
from
(select aa.sale_id, aa.OA_ref, aa.partner_id, af.name as partner_name, aa.product_id, ad.name as prod_name, aa.product_uom, ae.name as prod_uom, aa.total_prod_qty, ab.domain, ab.product_category_id, ac.sales_type, ab.product_group_id, ab.pitch,ab."TPI",   ab.dia_mm, ab.product_dia_convert_id, ab.nominal_dia,  ab.thread_direction,ab.product_tolerance_id,ab.srg, ac.gage_type, aa.date_confirm , aa.delay, aa.order_acceptance_ref,  aa.order_acceptance_ref_no_by_user, aa.customer_po_no, aa.picking_policy, aa.payment_term, aa.sequence, aa.service, aa.proforma_invoice_no, aa.pricelist_id
from
(select a.id as sale_id, a.name as OA_ref, a.partner_id, b.product_id, b.product_uom, sum(b.product_uom_qty ) total_prod_qty, a.date_confirm as date_confirm, round(delay::numeric,0)::numeric as delay , a.order_acceptance_ref_no as order_acceptance_ref, cast(delay as int8) as delay_ship, a.order_acceptance_ref_no_by_user, a.customer_po_no, a.picking_policy, a.payment_term, b.sequence, a.service, a.proforma_invoice_no, a.pricelist_id
from sale_order a, sale_order_line b
where a.id=b.order_id
and a.state in ('manual','progress','shipping_except','invoice_except')
group by 
a.id , a.name,a.partner_id, b.sequence, b.product_id, b.product_uom,a.date_confirm, b.delay, a.order_acceptance_ref_no,a.customer_po_no, a.picking_policy )  aa, product_template ab, product_category ac, product_product ad, product_uom ae, res_partner af
where 
aa.product_id=ad.id and
ad.product_tmpl_id=ab.id and
ab.product_category_id=ac.id and
aa.product_uom=ae.id and
aa.partner_id=af.id)  aaa

inner join
(select a.origin, a.sale_id, a.packing_id, a.invoice_state as picking_invoice_status, b.state as picking_status, b.product_id, b.product_uom, c.name as picking_uom, sum(b.product_qty) as product_picking_qty, b.sequence, a.name as delivery_order_no, array_to_string(array_agg(COALESCE(d.name,'NA')),'-') as lot_id  from stock_picking a, stock_move b, product_uom c, (select a.id, b.name from (select id, prodlot_id from stock_move) a left outer join (select id, name from stock_production_lot) b on a.prodlot_id=b.id) d
where a.type='out' and a.id=b.picking_id and b.id=d.id and a.state in ('assigned', 'confirmed') and b.product_uom=c.id and b.state in ('assigned', 'confirmed', 'waiting') and a.packing_id is null and 
a.id in (select distinct c.id from stock_picking c, stock_move d where c.id=d.picking_id and c.state in ('assigned','confirmed','waiting','done') and d.state in ('assigned'))
group by a.origin, a.sale_id, a.packing_id, a.invoice_state, b.state, b.sequence, b.product_id, b.product_uom, c.name ,a.name) bbb
on
aaa.sale_id=bbb.sale_id and aaa.product_id=bbb.product_id and aaa.sequence=bbb.sequence

left outer join
(
select id, name as product_group, pitch_format, dia_format from product_group ) ccc
on aaa.product_group_id=ccc.id

left outer join
(select a.origin, a.invoice_state as picking_invoice_status, b.state as picking_status, b.product_id, b.product_uom, c.name as picking_uom, sum(b.product_qty) as product_picking_qty, 
array_to_string(array_agg(COALESCE(d.name,'NA')),'-') as lot_id, b.sequence, a.name as delivery_order_no from stock_picking a, stock_move b, product_uom c, stock_production_lot d
where a.id=b.picking_id and a.state in ('assigned', 'confirmed') and b.product_uom=c.id and b.state in ('assigned', 'confirmed', 'waiting') and b.prodlot_id=d.id
group by a.origin, a.invoice_state, b.state,b.sequence, b.product_id, b.product_uom, c.name, a.name ) eee
on
aaa.OA_ref=eee.origin and aaa.product_id=eee.product_id  and aaa.sequence=eee.sequence

left outer join
(
select id, name as product_tolerance from product_tolerance ) ddd
on aaa.product_tolerance_id=ddd.id

left outer join
(
select id, name as payment_term from account_payment_term ) fff
on aaa.payment_term=fff.id

left outer join
(
select a.id as pricelist_id, case when b.name='INR' then 'domestic' else 'export' end as trade_type from product_pricelist a, res_currency b where a.currency_id=b.id ) ggg
on aaa.pricelist_id=ggg.pricelist_id
) aaaa



left outer join
(
select bbba.product_id, 
array_to_string(array_agg(bbba.stock_location),': ') as stock_location, 
sum(bbba.prod_qty_free) as prod_free_qty,  
array_to_string(array_agg(replace(to_char(bbba.prod_qty_free,'9999'),' ','')),':') as Prod_free_loc from

(select 
COALESCE(aaaa.location_id,'0') as location_id, 
COALESCE(hhhh.stock_location) as stock_location,
COALESCE(aaaa.product_id,'0') as product_id, 
COALESCE(aaaa.uom_id,'0') as uom_id, 
COALESCE(aaaa.prod_uom,'') as prod_uom, 
COALESCE( COALESCE(eeee.prod_incoming_qty_done,'0') - COALESCE(dddd.prod_outgoing_qty_done,'0') - COALESCE(ffff.prod_outgoing_qty_assigned,'0') ) as prod_qty_free

from
(select aaa.location_id, aaa.product_id, ccc.uom_id, ddd.name as prod_uom from 
(select distinct aa.location_id, aa.product_id from (select location_id, product_id from stock_move union select location_dest_id as location_id, product_id from stock_move ) aa ) aaa, 
product_product bbb, product_template ccc, product_uom ddd, product_category eee 
where aaa.product_id=bbb.id and bbb.product_tmpl_id=ccc.id and ccc.uom_id=ddd.id and ccc.product_category_id=eee.id) aaaa

left outer join
( select a.product_id, a.location_id as location_sec_id, sum(a.product_qty * d.factor/e.factor) as prod_outgoing_qty_done, c.uom_id from stock_move a, product_product b, product_template c, product_uom d, product_uom e
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('done') and a.product_uom=e.id 
group by a.product_id, a.location_id, c.uom_id ) dddd
on aaaa.product_id=dddd.product_id and aaaa.location_id=dddd.location_sec_id

left outer join
( select a.product_id, a.location_dest_id, sum(a.product_qty * d.factor/e.factor) as prod_incoming_qty_done, c.uom_id from stock_move a, product_product b, product_template c, product_uom d, product_uom e
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('done') and a.product_uom=e.id 
group by a.product_id, a.location_dest_id, c.uom_id ) eeee
on aaaa.product_id=eeee.product_id and aaaa.location_id=eeee.location_dest_id


left outer join
( select a.product_id, a.location_id as location_sec_id, sum(a.product_qty * d.factor/e.factor) as prod_outgoing_qty_assigned, c.uom_id from stock_move a, product_product b, product_template c, product_uom d, product_uom e
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('assigned') and a.product_uom=e.id 
group by a.product_id, a.location_id, c.uom_id ) ffff
on aaaa.product_id=ffff.product_id and aaaa.location_id=ffff.location_sec_id

inner join
(select id,name as stock_location from stock_location where usage='internal') hhhh
on  aaaa.location_id=hhhh.id ) bbba
where bbba.prod_qty_free !=0
group by bbba.product_id ) bbbc
on aaaa.product_id=bbbc.product_id



left outer join
(
select 
bbba.product_id, 
bbba.sale_id,
array_to_string(array_agg(bbba.stock_location),': ') as stock_location, 
COALESCE(sum(bbba.prod_qty_sale_assigned),'0') as allocated_qty_sale,  
array_to_string(array_agg(to_char(bbba.prod_qty_sale_assigned,'9999')),':') as sale_assigned_loc 
from
(select 
COALESCE(aaaa.location_id,'0') as location_id, 
COALESCE(hhhh.stock_location) as stock_location,
COALESCE(aaaa.product_id,'0') as product_id, 
COALESCE(aaaa.uom_id,'0') as uom_id, 
COALESCE(aaaa.prod_uom,'') as prod_uom, 
COALESCE(COALESCE(ffff.prod_outgoing_qty_assigned,'0')) as prod_qty_sale_assigned,
COALESCE(aaaa.sale_id,'-1') as sale_id
from
(select aaa.location_id, aaa.product_id, ccc.uom_id, ddd.name as prod_uom, aaa.sale_id from 
(select distinct aa.location_id, aa.product_id, aa.sale_id from (select a.location_id, a.product_id, b.sale_id from stock_move a, stock_picking b where a.picking_id=b.id  union select a.location_dest_id as location_id, a.product_id, b.sale_id from stock_move a, stock_picking b where a.picking_id=b.id ) aa ) aaa, 
product_product bbb, product_template ccc, product_uom ddd, product_category eee 
where aaa.product_id=bbb.id and bbb.product_tmpl_id=ccc.id and ccc.uom_id=ddd.id and ccc.product_category_id=eee.id) aaaa

left outer join
( select a.product_id, a.location_id as location_sec_id, sum(a.product_qty * d.factor/e.factor) as prod_outgoing_qty_assigned, c.uom_id, f.sale_id   from stock_move a, product_product b, product_template c, product_uom d, product_uom e, stock_picking f
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('assigned') and a.product_uom=e.id and a.picking_id=f.id and f.state in ('confirmed','assigned')
group by a.product_id, a.location_id, c.uom_id, f.sale_id ) ffff
on aaaa.product_id=ffff.product_id and aaaa.location_id=ffff.location_sec_id and aaaa.sale_id=ffff.sale_id
inner join
(select id,name as stock_location from stock_location where usage='internal') hhhh
on  aaaa.location_id=hhhh.id ) bbba
where bbba.prod_qty_sale_assigned !=0
group by bbba.product_id, bbba.sale_id ) bbbd
on aaaa.product_id=bbbd.product_id  and aaaa.sale_id=bbbd.sale_id



left outer join
(
select 
bbba.product_id, 
bbba.sale_id,
array_to_string(array_agg(bbba.stock_location),': ') as stock_location, 
sum(bbba.prod_qty_sale_done_unassigned) as sale_unassigned_qty,  
array_to_string(array_agg(replace(to_char(bbba.prod_qty_sale_done_unassigned,'9999'),' ','')),':') as sale_unassigned_loc 
from
(select 
COALESCE(aaaa.location_id,'0') as location_id, 
COALESCE(hhhh.stock_location) as stock_location,
COALESCE(aaaa.product_id,'0') as product_id, 
COALESCE(aaaa.uom_id,'0') as uom_id, 
COALESCE(aaaa.prod_uom,'') as prod_uom, 
COALESCE( COALESCE(eeee.prod_incoming_qty_done,'0') - COALESCE(dddd.prod_outgoing_qty_done,'0') - COALESCE(ffff.prod_outgoing_qty_assigned,'0')) as prod_qty_sale_done_unassigned,
COALESCE(aaaa.sale_id,'-1') as sale_id
from

(select aaa.location_id, aaa.product_id, ccc.uom_id, ddd.name as prod_uom, aaa.sale_id from 
(select distinct aa.location_id, aa.product_id, aa.sale_id from (select a.location_id, a.product_id, b.sale_id from stock_move a, stock_picking b where a.picking_id=b.id  union select a.location_dest_id as location_id, a.product_id, b.sale_id from stock_move a, stock_picking b where a.picking_id=b.id ) aa ) aaa, 
product_product bbb, product_template ccc, product_uom ddd, product_category eee 
where aaa.product_id=bbb.id and bbb.product_tmpl_id=ccc.id and ccc.uom_id=ddd.id and ccc.product_category_id=eee.id) aaaa

left outer join
( select a.product_id, a.location_id as location_sec_id, sum(a.product_qty * d.factor/e.factor) as prod_outgoing_qty_assigned, c.uom_id, f.sale_id from stock_move a, product_product b, product_template c, product_uom d, product_uom e, stock_picking f
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('assigned') and a.product_uom=e.id and a.picking_id=f.id and f.state in ('confirmed','assigned')
group by a.product_id, a.location_id, c.uom_id, f.sale_id ) ffff
on aaaa.product_id=ffff.product_id and aaaa.location_id=ffff.location_sec_id and aaaa.sale_id=ffff.sale_id


left outer join
( select a.product_id, a.location_id as location_sec_id, sum(a.product_qty * d.factor/e.factor) as prod_outgoing_qty_done, c.uom_id, f.sale_id from stock_move a, product_product b, product_template c, product_uom d, product_uom e, stock_picking f
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('done') and a.product_uom=e.id and a.picking_id=f.id and f.state in ('done')
group by a.product_id, a.location_id, c.uom_id, f.sale_id ) dddd
on aaaa.product_id=dddd.product_id and aaaa.location_id=dddd.location_sec_id  and aaaa.sale_id=dddd.sale_id

left outer join
( select a.product_id, a.location_dest_id, sum(a.product_qty * d.factor/e.factor) as prod_incoming_qty_done, c.uom_id, f.sale_id from stock_move a, product_product b, product_template c, product_uom d, product_uom e, stock_picking f
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('done') and a.product_uom=e.id and a.picking_id=f.id and f.state in ('done')
group by a.product_id, a.location_dest_id, c.uom_id, f.sale_id ) eeee
on aaaa.product_id=eeee.product_id and aaaa.location_id=eeee.location_dest_id and aaaa.sale_id=eeee.sale_id


inner join
(select id,name as stock_location from stock_location where usage='internal') hhhh
on  aaaa.location_id=hhhh.id ) bbba
where bbba.prod_qty_sale_done_unassigned !=0
group by bbba.product_id, bbba.sale_id ) bbbe
on aaaa.product_id=bbbe.product_id and aaaa.sale_id=bbbe.sale_id 

left outer join
(
select 
bbba.sale_id,
array_to_string(array_agg(bbba.stock_location),': ') as stock_location, 
COALESCE(sum(bbba.prod_qty_sale_assigned),'0') as allocated_qty,  
array_to_string(array_agg(to_char(bbba.prod_qty_sale_assigned,'9999')),':') as sale_assigned_loc 
from
(select 
COALESCE(aaaa.location_id,'0') as location_id, 
COALESCE(hhhh.stock_location) as stock_location,
COALESCE(aaaa.product_id,'0') as product_id, 
COALESCE(aaaa.uom_id,'0') as uom_id, 
COALESCE(aaaa.prod_uom,'') as prod_uom, 
COALESCE(COALESCE(ffff.prod_outgoing_qty_assigned,'0')) as prod_qty_sale_assigned,
COALESCE(aaaa.sale_id,'-1') as sale_id
from
(select aaa.location_id, aaa.product_id, ccc.uom_id, ddd.name as prod_uom, aaa.sale_id from 
(select distinct aa.location_id, aa.product_id, aa.sale_id from (select a.location_id, a.product_id, b.sale_id from stock_move a, stock_picking b where a.picking_id=b.id  union select a.location_dest_id as location_id, a.product_id, b.sale_id from stock_move a, stock_picking b where a.picking_id=b.id ) aa ) aaa, 
product_product bbb, product_template ccc, product_uom ddd, product_category eee 
where aaa.product_id=bbb.id and bbb.product_tmpl_id=ccc.id and ccc.uom_id=ddd.id and ccc.product_category_id=eee.id) aaaa

left outer join
( select a.product_id, a.location_id as location_sec_id, sum(a.product_qty * d.factor/e.factor) as prod_outgoing_qty_assigned, c.uom_id, f.sale_id   from stock_move a, product_product b, product_template c, product_uom d, product_uom e, stock_picking f
where a.product_id=b.id and
b.product_tmpl_id=c.id and
c.uom_id=d.id and
a.state in ('assigned') and a.product_uom=e.id and a.picking_id=f.id and f.state in ('confirmed','assigned')
group by a.product_id, a.location_id, c.uom_id, f.sale_id ) ffff
on aaaa.product_id=ffff.product_id and aaaa.location_id=ffff.location_sec_id and aaaa.sale_id=ffff.sale_id
inner join
(select id,name as stock_location from stock_location where usage='internal') hhhh
on  aaaa.location_id=hhhh.id ) bbba
where bbba.prod_qty_sale_assigned !=0
group by bbba.sale_id ) bbbf
on aaaa.sale_id=bbbf.sale_id
